# encoding: UTF-8
require_relative 'spec_helper'

describe 'openstack-dashboard::server' do
  before { dashboard_stubs }

  describe 'opensuse' do
    context 'mysql backend' do
      before do
        non_redhat_stubs
        @chef_run = ::ChefSpec::Runner.new ::OPENSUSE_OPTS
        ::Chef::Recipe.any_instance.stub(:db).with('dashboard').and_return(
          'service_type' => 'mysql', 'db_name' => 'flying_dolphin'
        )

        @chef_run.converge 'openstack-dashboard::server'
      end

      it 'installs mysql packages when mysql backend is configured' do
        @chef_run = ::ChefSpec::Runner.new ::OPENSUSE_OPTS
        ::Chef::Recipe.any_instance.stub(:db).with('dashboard').and_return(
          'service_type' => 'mysql', 'db_name' => 'flying_dolphin'
        )
        @chef_run.converge 'openstack-dashboard::server'

        expect(@chef_run).to upgrade_package 'python-mysql'
      end
    end

    context 'postgresql backend' do
      before do
        non_redhat_stubs
        @chef_run = ::ChefSpec::Runner.new ::OPENSUSE_OPTS
        ::Chef::Recipe.any_instance.stub(:db).with('dashboard').and_return(
          'service_type' => 'postgresql', 'db_name' => 'flying_elephant'
        )
        @chef_run.converge 'openstack-dashboard::server'
      end

      it 'installs packages' do
        expect(@chef_run).to upgrade_package 'openstack-dashboard'
      end

      it 'installs postgresql packages' do
        expect(@chef_run).to upgrade_package 'python-psycopg2'
      end

      it 'creates local_settings.py' do
        file = @chef_run.template '/usr/share/openstack-dashboard/openstack_dashboard/local/local_settings.py'

        expect(@chef_run).to render_file(file.name).with_content('autogenerated')
      end

      it 'creates .blackhole dir with proper owner' do
        dir = '/usr/share/openstack-dashboard/openstack_dashboard/.blackhole'

        expect(@chef_run.directory(dir).owner).to eq('root')
      end
    end
  end
end
